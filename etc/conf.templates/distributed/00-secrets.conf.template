//
//   Copyright 2019  SenX S.A.S.
//
//   Licensed under the Apache License, Version 2.0 (the "License");
//   you may not use this file except in compliance with the License.
//   You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
//   Unless required by applicable law or agreed to in writing, software
//   distributed under the License is distributed on an "AS IS" BASIS,
//   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//   See the License for the specific language governing permissions and
//   limitations under the License.
//

//
// OSS Master Key, used to decrypt any 'wrapped:base64' key
//
#oss.master.key = hex:hhhhhh...

//
// 128 bits key for verifying class names, format is hex:hhhhh...hhhh
//
warp.hash.class = hex:hhhhhh...

//
// 128 bits key for verifying labels, format is hex:hhhhh...hhhh
//
warp.hash.labels = hex:hhhhhh...

//
// 128 bits key for verifying index names, format is hex:hhhhh...hhhh
//
warp.hash.index = hex:hhhhhh...

//
// 128 bits key for verifying tokens, format is hex:hhhhh...hhhh
//
warp.hash.token = hex:hhhhhh...

//
// 128 bits key for verifying app names, format is hex:hhhhh...hhhh
//
warp.hash.app = hex:hhhhhh...

//
// 256 bits key for protecting tokens, format is hex:hhhh...hhhh
//
warp.aes.token = hex:hhhhhh...

//
// 256 bits key to generate secure scripts
//
warp.aes.scripts = hex:hhhhhh...

//
// AES key to wrap metasets
//
warp.aes.metasets = hex:hhhhhhhh....

//
// 256 bits key for protecting log messages, format is hex:hhhhh...hhhh
//
#warp.aes.logging = hex:hhhhhh...

//
// Pre-Shared key for signing fetch requests. Signed fetch request expose owner/producer
//
#fetch.psk =

//
// Secret for REPORT, if unset, a random secret will be generated and output in the logs and on stdout
//
#warp10.report.secret =

//
// Manager secret, must be set to use the managing functions
//
#warp10.manager.secret =

